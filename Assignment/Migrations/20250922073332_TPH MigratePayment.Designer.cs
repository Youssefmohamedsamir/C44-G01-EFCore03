// <auto-generated />
using System;
using Assignment.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20250922073332_TPH MigratePayment")]
    partial class TPHMigratePayment
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Assignment.Models.AirCraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AilineId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("capacity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AilineId");

                    b.ToTable("AirCraft");
                });

            modelBuilder.Entity("Assignment.Models.AirCraftRoute", b =>
                {
                    b.Property<int>("AirCraftId")
                        .HasColumnType("int");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("Arrival")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Num_Of_Passenger")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AirCraftId", "RouteId");

                    b.HasIndex("RouteId");

                    b.ToTable("AirCraftRoute");
                });

            modelBuilder.Entity("Assignment.Models.Airline", b =>
                {
                    b.Property<int>("AirlineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirlineId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Person")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phones")
                        .HasColumnType("int");

                    b.HasKey("AirlineId");

                    b.ToTable("Airline");

                    b.HasData(
                        new
                        {
                            AirlineId = 10,
                            Name = "EgyptAir",
                            Phones = 1124594540
                        },
                        new
                        {
                            AirlineId = 20,
                            Name = "EgyptAir",
                            Phones = 1124594540
                        },
                        new
                        {
                            AirlineId = 30,
                            Name = "EgyptAir",
                            Phones = 1124594540
                        },
                        new
                        {
                            AirlineId = 40,
                            Name = "EgyptAir",
                            Phones = 1124594540
                        });
                });

            modelBuilder.Entity("Assignment.Models.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("buses");
                });

            modelBuilder.Entity("Assignment.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDoor")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("Assignment.Models.Crew", b =>
                {
                    b.Property<int>("AirCraftId")
                        .HasColumnType("int");

                    b.Property<string>("Maj_Pilot")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Assis_Pilot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Host1")
                        .HasColumnType("int");

                    b.Property<int>("Host2")
                        .HasColumnType("int");

                    b.HasKey("AirCraftId", "Maj_Pilot");

                    b.HasIndex("AirCraftId")
                        .IsUnique();

                    b.ToTable("Crew");
                });

            modelBuilder.Entity("Assignment.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AirEmpId")
                        .HasColumnType("int");

                    b.Property<int?>("AirlineId")
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirEmpId");

                    b.HasIndex("AirlineId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AirEmpId = 10,
                            Gender = "\0",
                            Name = "Youssef Mohamed",
                            Position = "Pilot"
                        },
                        new
                        {
                            Id = 2,
                            AirEmpId = 20,
                            Gender = "\0",
                            Name = "Ahme Bihbity",
                            Position = "breaker"
                        },
                        new
                        {
                            Id = 3,
                            AirEmpId = 30,
                            Gender = "\0",
                            Name = "Torky",
                            Position = "Programmer"
                        });
                });

            modelBuilder.Entity("Assignment.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CashPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditPayment")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("Id");

                    b.ToTable("payments");

                    b.HasDiscriminator<string>("CreditPayment").HasValue("Payment");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Assignment.Models.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Classification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Destination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Orgin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("Assignment.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AirlineId")
                        .HasColumnType("int");

                    b.Property<int?>("AirlineId1")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AirlineId");

                    b.HasIndex("AirlineId1");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Assignment.Models.CashPayment", b =>
                {
                    b.HasBaseType("Assignment.Models.Payment");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("CashPayment");
                });

            modelBuilder.Entity("Assignment.Models.CreditCardPayment", b =>
                {
                    b.HasBaseType("Assignment.Models.Payment");

                    b.Property<int>("CardNumber")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("CreditCardPayment");
                });

            modelBuilder.Entity("Assignment.Models.AirCraft", b =>
                {
                    b.HasOne("Assignment.Models.Airline", "AirlineTable")
                        .WithMany("AirCrafts")
                        .HasForeignKey("AilineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirlineTable");
                });

            modelBuilder.Entity("Assignment.Models.AirCraftRoute", b =>
                {
                    b.HasOne("Assignment.Models.AirCraft", "AirCraftRoutNav")
                        .WithMany("AirCraftNav")
                        .HasForeignKey("AirCraftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.Route", "RouteNav")
                        .WithMany("AirCraftRoutes02")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AirCraftRoutNav");

                    b.Navigation("RouteNav");
                });

            modelBuilder.Entity("Assignment.Models.Crew", b =>
                {
                    b.HasOne("Assignment.Models.AirCraft", "AirCraftNav02")
                        .WithOne("CrewNav")
                        .HasForeignKey("Assignment.Models.Crew", "AirCraftId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AirCraftNav02");
                });

            modelBuilder.Entity("Assignment.Models.Employee", b =>
                {
                    b.HasOne("Assignment.Models.Airline", "AirEmp")
                        .WithMany()
                        .HasForeignKey("AirEmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment.Models.Airline", null)
                        .WithMany("Employees")
                        .HasForeignKey("AirlineId");

                    b.Navigation("AirEmp");
                });

            modelBuilder.Entity("Assignment.Models.Transaction", b =>
                {
                    b.HasOne("Assignment.Models.Airline", "AirNav")
                        .WithMany()
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Assignment.Models.Airline", null)
                        .WithMany("Transactions")
                        .HasForeignKey("AirlineId1");

                    b.Navigation("AirNav");
                });

            modelBuilder.Entity("Assignment.Models.AirCraft", b =>
                {
                    b.Navigation("AirCraftNav");

                    b.Navigation("CrewNav")
                        .IsRequired();
                });

            modelBuilder.Entity("Assignment.Models.Airline", b =>
                {
                    b.Navigation("AirCrafts");

                    b.Navigation("Employees");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Assignment.Models.Route", b =>
                {
                    b.Navigation("AirCraftRoutes02");
                });
#pragma warning restore 612, 618
        }
    }
}
